<?xml version="1.0"?>

<project name="ant task" basedir="." default="main">
    
    <property name="src.dir" location="src/main/java" />
    <property name="test.dir" location="src/test/java" />
    <property name="build.dir" location="build/classes" />
    <property name="dist.dir" location="dist" />
    <property name="docs.dir" location="docs" />
    <property name="reports.dir" location="reports" />
    <property name="findbugs.home" value="H:\dev\findbugs-1.3.9" />
    <property name="cobertura.home" value="H:\dev\cobertura-1.9.4.1" />
	<property name="ant.home" value="H:\dev\apache-ant-1.8.2\lib" />
	<property name="maven.repo" value="C:\Users\Deniz\.m2\repository" />
    <property name="instrumented.dir" location="build/instrumented" />
    
	<path id="master.classpath">
	    <fileset dir="${ant.home}">
	    	<include name="*.jar" />
	    </fileset>
		<fileset dir="${maven.repo}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
    <path id="test.classpath">
    	<pathelement location="${instrumented.dir}" />
    </path>
    
    <path id="cobertura.classpath">
        <fileset dir="${cobertura.home}">
            <include name="cobertura.jar" />
            <include name="lib/**/*.jar" />
        </fileset>
    </path>
    
    <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
    
    <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"/>
    
    <taskdef resource="checkstyletask.properties"/>
    
    <taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>
    
    <target name="clean">
        <delete dir="${build.dir}" />
        <delete dir="${instrumented.dir}" />
    </target>
    
    <target name="makedir">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${docs.dir}" />
        <mkdir dir="${dist.dir}" />
        <mkdir dir="${reports.dir}/raw" />
    	<mkdir dir="${reports.dir}/cobertura" />
        <mkdir dir="${instrumented.dir}" />
    </target>
    
    <target name="compile-src" depends="clean, makedir">
        <javac srcdir="${src.dir}" destdir="${build.dir}" includeantruntime="false" debug="true">
        	<classpath refid="master.classpath" />
        </javac>
    </target>
	
	<target name="compile-test" depends="clean, makedir">
		<javac srcdir="${test.dir}" destdir="${build.dir}" includeantruntime="false" debug="true">
			<classpath refid="master.classpath" />
		</javac>
	</target>
    
    <target name="compile" depends="compile-src, compile-test">
        
    </target>
    
    
    <target name="instrument" depends="compile">
        <cobertura-instrument todir="${instrumented.dir}">
            <fileset dir="${build.dir}">
                <include name="**/*.class" />
            </fileset>
            
        </cobertura-instrument>
    </target>
	
	<target name="cover-test" depends="instrument">
	    <junit printsummary="on"
	           fork="yes">
	    	<classpath location="${instrumented.dir}" />
	    	<classpath location="${build.dir}" />
	    	<classpath refid="cobertura.classpath" />
	    	<batchtest fork="yes" todir="${reports.dir}/raw">
	    	    <fileset dir="${instrumented.dir}" >
	    		    <include name="**/*Test*" />
	    	    	
	    		</fileset>
	    	</batchtest>
	    	<formatter type="xml" />
	    	<formatter type="brief" usefile="false" />
	    </junit>
	</target>
	
	<target name="coverage-report" depends="cover-test">
		<cobertura-report format="xml" srcdir="${src.dir}" destdir="${reports.dir}/cobertura" />
	</target>
    
    <target name="docs" depends="compile">
        <javadoc packagenames="src" sourcepath="${src.dir}" destdir="${docs.dir}">
            <fileset dir="${src.dir}">
                <include name="**" />
            </fileset>
        </javadoc>
    </target>
    
    <target name="findbugs">
        <findbugs home="${findbugs.home}"
                  output="xml"
                  outputFile="${reports.dir}/findbugs.xml" >
            <sourcepath path="${src.dir}" />
            <class location="${dist.dir}/agent.jar" />
        </findbugs>
    </target>
    
    <target name="checkstyle" depends="compile">
        <checkstyle config="checkstyle_all.xml" failOnViolation="false">
            <fileset dir="${src.dir}" includes="**/*.java" />
            <formatter type="xml" toFile="${reports.dir}/checkstyle.xml" />
        </checkstyle>
    </target>
       
    <target name="pmd">
        <pmd shortFilenames="true">
            <ruleset>basic</ruleset>
            <formatter type="xml" toFile="${reports.dir}/pmd.xml" />
            <fileset dir="${src.dir}">
                <include name="**/*.java" />
            </fileset>
        </pmd>
    </target>
    
    <target name="main" depends="checkstyle, pmd, coverage-report">
        <description>Main target</description>
    </target>
</project>